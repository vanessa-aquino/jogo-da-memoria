const emojis = [
    'üê±',
    'üê±',
    'üê∂',
    'üê∂',
    'üê∞',
    'üê∞',
    'ü¶Ñ',
    'ü¶Ñ',
    'üêπ',
    'üêπ',
    'ü¶ù',
    'ü¶ù'
]; // Guarda todos os emogis.
let openCards = []; // Guarda as cartas abertas.

let shuffleEmojis = emojis.sort(() => (Math.random() > 0.5) ? 2: -1) // Fun√ß√£o para 'embara√ßhar os emojis', o '.sort()' permite criar uma ordena√ß√£o de acordo com a regra da fun√ß√£o que voc√™ passar√°. A fun√ß√£o coloca o peso de '2' ou '-1' para cada elemento que ele pega, e como ir√° haver mais de um elemento com o mesmo valor, ele far√° uma ordena√ß√£o aleat√≥ria pros elementos.

for(let i = 0; i < emojis.length; i++) {
    let box = document.createElement('div'); // Tag div criada din√¢micamente.
    box.className = 'item'; // Adicionada a classe na div criada anteriormente.
    box.innerHTML = shuffleEmojis[i]; // Aqui eu digo que o que estar√° dentro da minha div, ser√° o meu 'shuffleEmojis' na sua posi√ß√£o i.
    box.onclick = handleClick; // Toda vez que eu clicar na caixinha, eu executarei a fun√ß√£o 'handleClick'.
    document.querySelector('.game').appendChild(box); // colocando a div criada como filho da div '.game'.
}

function handleClick(){
    if(openCards.length < 2) { // Verificar se eu tenho 2 cartas abertas.
        this.classList.add('boxOpen'); // Toda vez que eu clicar para abrir um card eu vou adicionar a classe 'boxOpen'.
        openCards.push(this); // E ao clicar na carta, guardarei ela no vetor 'opencards'. Aceitando no m√°xio duas.
    }

    if(openCards.length == 2) { // Se eu tiver pelo menos duas cartas guardadas no meu vetor. Chamarei a fun√ß√£o abaixo 'checkMatch'.
        setTimeout(checkMatch, 500);
    }
}

function checkMatch(){ // Checar se as cartas s√£o iguais.
    if(openCards[0].innerHTML === openCards[1].innerHTML) { // Comparar a marca√ßa√µ HTML das duas cartas.
        openCards[0].classList.add('boxMatch');
        openCards[1].classList.add('boxMatch');
        // Inserir a classe 'boxMatch' nos elementos que foram guardados no 'openCards' que possuem a mesma marca√ß√£o HTML, ou seja, as cartas iguais.
    } else {
        openCards[0].classList.remove('boxOpen')
        openCards[1].classList.remove('boxOpen')
        // Se as cartas forem diferentes, remove de ambas a classe 'boxOpen'.
    }

    openCards = []; // Para resetar as cartas que eu tenho na mem√≥ria.

    if(document.querySelectorAll('.boxMatch').length === emojis.length) {
        alert('Parab√©ns, voc√™ venceu ü•≥');
    }
}

